<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:web="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="3.1">
	<display-name>freeBoard Created Web Application</display-name>

	<!--
	1. ContextLoaderListener 객체는 먼저 <context-param>으로 등록된 설정 파일(ex. ApplicationConfig.java)을 읽어서
	첫번째 Spring Container(Root Container)를 구동하고 비즈니스 객체들(Service, DAO)을 생성한다.
	이를 부모 컨테이너라고 부른다. 부모 컨테이너는 @ComponentScan으로 DAO・Service Bean을 찾고 메모리에 생성한다.
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- ApplicationContext 빈 설정-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			com.example.freeboard.config.ApplicationConfig
			com.example.freeboard.config.security.SecurityConfig
		</param-value>
	</context-param>
	<context-param>
		<param-name>contextClass</param-name>
		<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
	</context-param>
	<!-- jsp 상속 -->
	<context-param>
		<param-name>jsp-inheritance-prefix</param-name>
		<param-value>/WEB-INF/layouts/</param-value>
	</context-param>
	<context-param>
		<param-name>jsp-inheritance-suffix</param-name>
		<param-value>.jsp</param-value>
	</context-param>


	<!--
	2. '/' 요청(=> 모든 요청)이 들어오면, Servlet Container가 DispatcherServlet 객체를 생성한다.
	DispatcherServlet이 내부적으로 init()을 호출할 때,
	<init-param>으로 등록된 Spring 설정 파일을 찾아 두번째 Spring Container를 구동한다.
	-->
	<servlet>
		<servlet-name>mvcBoard</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextClass</param-name>
			<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
		</init-param>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>com.example.freeboard.config.WebMvcContextConfiguration</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>mvcBoard</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	
	<!--encoding  -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>



	
	
	<!-- Spring Security -->
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<!--  
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/security-context.xml
		</param-value>
	</context-param>
	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	-->



</web-app>